package org.as2;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import picocli.CommandLine;
import picocli.CommandLine.Command;
import picocli.CommandLine.Option;
import picocli.CommandLine.Parameters;

import java.io.File;
import java.io.InputStreamReader;
import java.util.concurrent.Callable;

@Command(name = "json", mixinStandardHelpOptions = true, version = "jq 1.0", description = "This challenge is to build your own json parser - see https://codingchallenges.fyi/challenges/challenge-json-parser")
public class Json implements Callable<Result> {

    public static int VERBOSE = 0;

    public static boolean verbose() {
        return verbose1();
    }

    public static boolean verbose1() {
        return VERBOSE >= 1;
    }
    public static boolean verbose2() {
        return VERBOSE >= 2;
    }

    public static void main(String[] args) {
        var json = new Json();
        var cmd = new CommandLine(json);
        cmd.execute(args);
        var executionResult = cmd.getExecutionResult();
        if (executionResult != null) {
            System.out.println(executionResult);
        }
    }

    private Json() {

    }

    @Parameters(index = "0", arity = "0..1", description = "json file to validate")
    File file;

    @Option(names = "-v", description = "-v specifies verbose level")
    boolean verbose1 = false;

    @Option(names = "-vv", description = "-vv specifies verbose level 2")
    boolean verbose2 = false;

    @Override
    public Result call() throws Exception {
        Json.VERBOSE = 0;
        if (this.verbose1) Json.VERBOSE = 1;
        if (this.verbose2) Json.VERBOSE = 2;
        Lexer lexer;
        if (this.file != null) {
            lexer = new Lexer(this.file);
        } else {
            lexer = new Lexer(new InputStreamReader(System.in));
        }
        try {
            var parser = new JsonParser(lexer);
            var result = parser.parse();
            return new Result(result);
        } catch (JsonParserException e) {
            return new Result(e);
        }
    }
}